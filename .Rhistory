}
colnames(dd) <- c('pid','group','evnum','condition','type','fz')
dd$pid <- factor(dd$pid)
dd$group <- factor(dd$group)
dd$evnum <- as.numeric(dd$evnum)
dd$condition <- factor(dd$condition)
dd$type <- factor(dd$type)
dd$fz <- as.numeric(dd$fz)
procdat <- dd
ggplot(procdat, aes(x = condition, y = fz)) +
theme_bw() +
geom_quasirandom() +
facet_wrap(group~type)
ggplot(procdat, aes(x = condition, y = fz, color = pid)) +
theme_bw() +
geom_quasirandom() +
facet_wrap(group~type)
ggplot(procdat, aes(x = condition, y = fz, color = pid)) +
theme_bw() +
stat_summary(fun='mean') +
facet_wrap(group~type)
head(procdat)
unique(procdat$condition)
unique(ev$condition)
unique(evdat$condition)
evdat = data.frame()
for(pp in 1:participants){
gg <- groups[(pp %% length(groups))+1]
for(ee in 1:events){
cc <- conditions[(ee %% length(events))+1]
evtime_on <- evtimes_on[ee]
line <- c(pp,gg,ee,cc,'onset',evtime_on)
evdat <- rbind(evdat,line)
evtime_off <- evtimes_off[ee]
line <- c(pp,gg,ee,cc,'offset',evtime_off)
evdat <- rbind(evdat,line)
}
}
timepoints <- 1260
regions <- c('hippo','mpfc')
participants <- 40
groups <- c('young','old')
events <- 20
evdur <- 10
conditions <- c('recall','forget')
spacing <- floor((timepoints/(events+1)))
evtimes_on <- (1:events)*spacing
evtimes_off <- (1:events)*spacing+evdur
evdat = data.frame()
for(pp in 1:participants){
gg <- groups[(pp %% length(groups))+1]
for(ee in 1:events){
cc <- conditions[(ee %% length(events))+1]
evtime_on <- evtimes_on[ee]
line <- c(pp,gg,ee,cc,'onset',evtime_on)
evdat <- rbind(evdat,line)
evtime_off <- evtimes_off[ee]
line <- c(pp,gg,ee,cc,'offset',evtime_off)
evdat <- rbind(evdat,line)
}
}
head(evdat)
unique(evdat$X.recall.)
cc
(ee %% length(events))+1
length(events)
events
evdat = data.frame()
for(pp in 1:participants){
gg <- groups[(pp %% length(groups))+1]
for(ee in 1:events){
cc <- conditions[(ee %% events)+1]
evtime_on <- evtimes_on[ee]
line <- c(pp,gg,ee,cc,'onset',evtime_on)
evdat <- rbind(evdat,line)
evtime_off <- evtimes_off[ee]
line <- c(pp,gg,ee,cc,'offset',evtime_off)
evdat <- rbind(evdat,line)
}
}
head(evdat)
colnames(evdat) <- c('pid','group','evnum','condition','type','time')
(ee %% events)
events
ee
1:20 %% events
evdat = data.frame()
for(pp in 1:participants){
gg <- groups[(pp %% length(groups))+1]
for(ee in 1:events){
cc <- conditions[(ee %% length(conditions))+1]
evtime_on <- evtimes_on[ee]
line <- c(pp,gg,ee,cc,'onset',evtime_on)
evdat <- rbind(evdat,line)
evtime_off <- evtimes_off[ee]
line <- c(pp,gg,ee,cc,'offset',evtime_off)
evdat <- rbind(evdat,line)
}
}
colnames(evdat) <- c('pid','group','evnum','condition','type','time')
unique(evdat$condition)
evdat$evnum <- as.numeric(evdat$evnum)
evdat$time <- as.numeric(evdat$time)
tdat <- data.frame(
pid = rep(1:participants,each=length(regions)*timepoints),
region = rep(regions, participants, each = timepoints),
tr = rep(1:timepoints,participants*length(regions)),
value = runif(participants*length(regions)*timepoints)
)
alldat<-list(ev = evdat, tc = tdat)
ev <- dat$ev
tc <- dat$tc
dd <- data.frame()
events <- unique(ev$evnum)
participants <- unique(ev$pid)
etypes <- unique(ev$type)
regions <- unique(tc$region)
for(pp in participants){
gg <- unique(ev$group[ev$pid == pp])
for(ee in events){
cc <- unique(ev$condition[ev$pid == pp & ev$evnum == ee])
for(tt in etypes){
ev_onset <- ev$time[ev$pid == pp & ev$evnum == ee & ev$type == tt]
onset <- ev_onset + config$window_adjust
duration <- config$windowsize
tcsub <- subset(tc, pid == pp & tr >= onset & tr < (onset+duration))
rcor <- cor(tcsub$value[tcsub$region == regions[1]], tcsub$value[tcsub$region == regions[2]])
fz <- UTIL.fisherz(rcor)
line <- c(pp, gg, ee, cc, tt, fz)
dd <- rbind(dd,line)
}
}
}
colnames(dd) <- c('pid','group','evnum','condition','type','fz')
dd$pid <- factor(dd$pid)
dd$group <- factor(dd$group)
dd$evnum <- as.numeric(dd$evnum)
dd$condition <- factor(dd$condition)
dd$type <- factor(dd$type)
dd$fz <- as.numeric(dd$fz)
dim(dd)
line
dim(ev)
dim(tc)
dd <- data.frame()
events <- unique(ev$evnum)
participants <- unique(ev$pid)
etypes <- unique(ev$type)
regions <- unique(tc$region)
for(pp in participants){
gg <- unique(ev$group[ev$pid == pp])
for(ee in events){
cc <- unique(ev$condition[ev$pid == pp & ev$evnum == ee])
for(tt in etypes){
ev_onset <- ev$time[ev$pid == pp & ev$evnum == ee & ev$type == tt]
onset <- ev_onset + config$window_adjust
duration <- config$windowsize
tcsub <- subset(tc, pid == pp & tr >= onset & tr < (onset+duration))
rcor <- cor(tcsub$value[tcsub$region == regions[1]], tcsub$value[tcsub$region == regions[2]])
fz <- UTIL.fisherz(rcor)
line <- c(pp, gg, ee, cc, tt, fz)
dd <- rbind(dd,line)
}
}
}
dim(dd)
participants
head(ev)
timepoints <- 1260
regions <- c('hippo','mpfc')
participants <- 40
groups <- c('young','old')
events <- 20
evdur <- 10
conditions <- c('recall','forget')
spacing <- floor((timepoints/(events+1)))
evtimes_on <- (1:events)*spacing
evtimes_off <- (1:events)*spacing+evdur
evdat = data.frame()
for(pp in 1:participants){
gg <- groups[(pp %% length(groups))+1]
for(ee in 1:events){
cc <- conditions[(ee %% length(conditions))+1]
evtime_on <- evtimes_on[ee]
line <- c(pp,gg,ee,cc,'onset',evtime_on)
evdat <- rbind(evdat,line)
evtime_off <- evtimes_off[ee]
line <- c(pp,gg,ee,cc,'offset',evtime_off)
evdat <- rbind(evdat,line)
}
}
colnames(evdat) <- c('pid','group','evnum','condition','type','time')
evdat$evnum <- as.numeric(evdat$evnum)
evdat$time <- as.numeric(evdat$time)
tdat <- data.frame(
pid = rep(1:participants,each=length(regions)*timepoints),
region = rep(regions, participants, each = timepoints),
tr = rep(1:timepoints,participants*length(regions)),
value = runif(participants*length(regions)*timepoints)
)
alldat<-list(ev = evdat, tc = tdat)
head(alldat$ev)
head(alldat$tc)
dat <- alldat
ev <- dat$ev
tc <- dat$tc
dd <- data.frame()
head(ev)
head(tc)
events <- unique(ev$evnum)
participants <- unique(ev$pid)
etypes <- unique(ev$type)
regions <- unique(tc$region)
for(pp in participants){
gg <- unique(ev$group[ev$pid == pp])
for(ee in events){
cc <- unique(ev$condition[ev$pid == pp & ev$evnum == ee])
for(tt in etypes){
ev_onset <- ev$time[ev$pid == pp & ev$evnum == ee & ev$type == tt]
onset <- ev_onset + config$window_adjust
duration <- config$windowsize
tcsub <- subset(tc, pid == pp & tr >= onset & tr < (onset+duration))
rcor <- cor(tcsub$value[tcsub$region == regions[1]], tcsub$value[tcsub$region == regions[2]])
fz <- UTIL.fisherz(rcor)
line <- c(pp, gg, ee, cc, tt, fz)
dd <- rbind(dd,line)
}
}
}
colnames(dd) <- c('pid','group','evnum','condition','type','fz')
dd$pid <- factor(dd$pid)
dd$group <- factor(dd$group)
dd$evnum <- as.numeric(dd$evnum)
dd$condition <- factor(dd$condition)
dd$type <- factor(dd$type)
dd$fz <- as.numeric(dd$fz)
procdat <- dd
ggplot(procdat, aes(x = condition, y = fz, color = pid, )) +
theme_bw() +
stat_summary(fun='mean') +
facet_wrap(group~type)
ggplot(procdat, aes(x = condition, y = fz, color = condition, group = pid )) +
theme_bw() +
stat_summary(fun='mean') +
facet_wrap(group~type)
ggplot(procdat, aes(x = condition, y = fz, color = condition, group = pid )) +
theme_bw() +
stat_summary(fun='mean') +
stat_summary(fun='mean', geom = 'line') +
facet_wrap(group~type)
ggplot(procdat, aes(x = condition, y = fz, color = condition, group = pid )) +
theme_bw() +
stat_summary(fun='mean', color = 'black') +
stat_summary(fun='mean', geom = 'line', color = 'black') +
facet_wrap(group~type)
ggplot(procdat, aes(x = condition, y = fz, color = pid)) +
theme_bw() +
geom_quasirandom() +
facet_wrap(group~type)
ggplot(procdat, aes(x = condition, y = fz, color = condition)) +
theme_bw() +
stat_summary(aes(group = pid), fun='mean', color = 'black', alpha = .5) +
stat_summary(aes(group = pid), fun='mean', geom = 'line', color = 'black', alpha = .5) +
stat_summary(fun='meancl', geom='pointrange') +
facet_wrap(group~type)
ggplot(procdat, aes(x = condition, y = fz, color = pid)) +
theme_bw() +
geom_quasirandom() +
facet_wrap(group~type)
ggplot(procdat, aes(x = condition, y = fz, color = condition)) +
theme_bw() +
stat_summary(aes(group = pid), fun='mean', color = 'black', alpha = .5) +
stat_summary(aes(group = pid), fun='mean', geom = 'line', color = 'black', alpha = .5) +
stat_summary(fun='mean', geom='point') +
facet_wrap(group~type)
ggplot(procdat, aes(x = condition, y = fz, color = pid)) +
theme_bw() +
geom_quasirandom() +
facet_wrap(group~type)
ggplot(procdat, aes(x = condition, y = fz, color = condition)) +
theme_bw() +
stat_summary(aes(group = pid), fun='mean', color = 'black', alpha = .5) +
stat_summary(aes(group = pid), fun='mean', geom = 'line', color = 'black', alpha = .5) +
stat_summary(fun='mean', geom='point', size = 2) +
facet_wrap(group~type)
ggplot(procdat, aes(x = condition, y = fz, color = pid)) +
theme_bw() +
geom_quasirandom() +
facet_wrap(group~type)
ggplot(procdat, aes(x = condition, y = fz, color = condition)) +
theme_bw() +
stat_summary(aes(group = pid), fun='mean', color = 'black', alpha = .5) +
stat_summary(aes(group = pid), fun='mean', geom = 'line', color = 'black', alpha = .5) +
stat_summary(fun='mean', geom='point', size = 4) +
facet_wrap(group~type)
ggplot(procdat, aes(x = condition, y = fz, color = pid)) +
theme_bw() +
geom_quasirandom() +
facet_wrap(group~type)
ggplot(procdat, aes(x = condition, y = fz, color = condition)) +
theme_bw() +
stat_summary(aes(group = pid), fun='mean', color = 'black', alpha = .25) +
stat_summary(aes(group = pid), fun='mean', geom = 'line', color = 'black', alpha = .25) +
stat_summary(fun='mean_cl_normal', geom='errorbar', width = .2) +
stat_summary(fun='mean', geom='point', size = 4) +
facet_wrap(group~type)
ggplot(procdat, aes(x = condition, y = fz, color = pid)) +
theme_bw() +
geom_quasirandom() +
facet_wrap(group~type)
ggplot(procdat, aes(x = condition, y = fz, color = condition)) +
theme_bw() +
stat_summary(aes(group = pid), fun='mean', color = 'black', alpha = .25) +
stat_summary(aes(group = pid), fun='mean', geom = 'line', color = 'black', alpha = .25) +
stat_summary(fun.data='mean_cl_normal', geom='errorbar', width = .2) +
stat_summary(fun='mean', geom='point', size = 4) +
facet_wrap(group~type)
ggplot(procdat, aes(x = condition, y = fz, color = pid)) +
theme_bw() +
geom_quasirandom() +
facet_wrap(group~type)
ggplot(procdat, aes(x = condition, y = fz, color = condition)) +
theme_bw() +
stat_summary(aes(group = pid), fun='mean', color = 'black', alpha = .25) +
stat_summary(aes(group = pid), fun='mean', geom = 'line', color = 'black', alpha = .25) +
stat_summary(fun.data='mean_cl_normal', geom='errorbar', width = .2, size = 1) +
stat_summary(fun='mean', geom='point', size = 4) +
facet_wrap(group~type)
ggplot(procdat, aes(x = condition, y = fz, color = pid)) +
theme_bw() +
geom_quasirandom() +
facet_wrap(group~type)
ggplot(procdat, aes(x = condition, y = fz, color = condition)) +
theme_bw() +
stat_summary(aes(group = pid), fun='mean', color = 'black', alpha = .25) +
stat_summary(aes(group = pid), fun='mean', geom = 'line', color = 'black', alpha = .25) +
stat_summary(fun.data='mean_cl_normal', geom='errorbar', width = .1, size = 1) +
stat_summary(fun='mean', geom='point', size = 4) +
facet_wrap(group~type)
ggplot(procdat, aes(x = condition, y = fz, color = pid)) +
theme_bw() +
geom_quasirandom() +
facet_wrap(group~type)
ggplot(procdat, aes(x = condition, y = fz, color = condition)) +
theme_bw() +
stat_summary(aes(group = pid), fun='mean', color = 'black', alpha = .25) +
stat_summary(aes(group = pid), fun='mean', geom = 'line', color = 'black', alpha = .25) +
stat_summary(fun.data='mean_cl_normal', geom='errorbar', width = .1, size = 1) +
stat_summary(fun='mean', geom='point', size = 4, position = position_dodge(width = .2)) +
facet_wrap(group~type)
ggplot(procdat, aes(x = condition, y = fz, color = pid)) +
theme_bw() +
geom_quasirandom() +
facet_wrap(group~type)
ggplot(procdat, aes(x = condition, y = fz, color = condition)) +
theme_bw() +
stat_summary(aes(group = pid), fun='mean', color = 'black', alpha = .25) +
stat_summary(aes(group = pid), fun='mean', geom = 'line', color = 'black', alpha = .25) +
stat_summary(fun.data='mean_cl_normal', geom='errorbar', width = .1, size = 1) +
stat_summary(fun='mean', geom='point', size = 4, position = position_dodge(width = 1)) +
facet_wrap(group~type)
ggplot(procdat, aes(x = condition, y = fz, color = pid)) +
theme_bw() +
geom_quasirandom() +
facet_wrap(group~type)
ggplot(procdat, aes(x = condition, y = fz, color = condition)) +
theme_bw() +
stat_summary(aes(group = pid), fun='mean', color = 'black', alpha = .25) +
stat_summary(aes(group = pid), fun='mean', geom = 'line', color = 'black', alpha = .25) +
stat_summary(fun.data='mean_cl_normal', geom='errorbar', width = .1, size = 1, position = position_dodge(width = 1)) +
stat_summary(fun='mean', geom='point', size = 4, position = position_dodge(width = 1)) +
facet_wrap(group~type)
ggplot(procdat, aes(x = condition, y = fz, color = pid)) +
theme_bw() +
geom_quasirandom() +
facet_wrap(group~type)
ggplot(procdat, aes(x = condition, y = fz, color = condition)) +
theme_bw() +
stat_summary(aes(group = pid), fun='mean', color = 'black', alpha = .25, position = position_dodge(width = 1)) +
stat_summary(aes(group = pid), fun='mean', geom = 'line', color = 'black', alpha = .25) +
stat_summary(fun.data='mean_cl_normal', geom='errorbar', width = .1, size = 1, position = position_dodge(width = 1)) +
stat_summary(fun='mean', geom='point', size = 4, position = position_dodge(width = 1)) +
facet_wrap(group~type)
ggplot(procdat, aes(x = condition, y = fz, color = pid)) +
theme_bw() +
geom_quasirandom() +
facet_wrap(group~type)
ggplot(procdat, aes(x = condition, y = fz, color = condition)) +
theme_bw() +
stat_summary(aes(group = pid), fun='mean', color = 'black', alpha = .25) +
stat_summary(aes(group = pid), fun='mean', geom = 'line', color = 'black', alpha = .25) +
stat_summary(fun.data='mean_cl_normal', geom='errorbar', width = .1, size = 1) +
stat_summary(fun='mean', geom='point', size = 4, position = position_nudge(x = .2)) +
facet_wrap(group~type)
ggplot(procdat, aes(x = condition, y = fz, color = pid)) +
theme_bw() +
geom_quasirandom() +
facet_wrap(group~type)
ggplot(procdat, aes(x = condition, y = fz, color = condition)) +
theme_bw() +
stat_summary(aes(group = pid), fun='mean', color = 'black', alpha = .25) +
stat_summary(aes(group = pid), fun='mean', geom = 'line', color = 'black', alpha = .25) +
stat_summary(fun.data='mean_cl_normal', geom='errorbar', width = .1, size = 1) +
stat_summary(data = subset(procdat, condition == 'recall'), fun='mean', geom='point', size = 4, position = position_nudge(x = .2)) +
facet_wrap(group~type)
ggplot(procdat, aes(x = condition, y = fz, color = pid)) +
theme_bw() +
geom_quasirandom() +
facet_wrap(group~type)
ggplot(procdat, aes(x = condition, y = fz, color = condition)) +
theme_bw() +
stat_summary(aes(group = pid), fun='mean', color = 'black', alpha = .25) +
stat_summary(aes(group = pid), fun='mean', geom = 'line', color = 'black', alpha = .25) +
stat_summary(data = subset(procdat, condition == 'forget'), fun.data='mean_cl_normal', geom='errorbar', width = .1, size = 1, position = position_nudge(x = -.1)) +
stat_summary(data = subset(procdat, condition == 'forget'), fun='mean', geom='point', size = 4, position = position_nudge(x = -.1)) +
stat_summary(data = subset(procdat, condition == 'recall'), fun.data='mean_cl_normal', geom='errorbar', width = .1, size = 1, position = position_nudge(x = .1)) +
stat_summary(data = subset(procdat, condition == 'recall'), fun='mean', geom='point', size = 4, position = position_nudge(x = .1)) +
facet_wrap(group~type)
ggplot(procdat, aes(x = condition, y = fz, color = condition)) +
theme_bw() +
stat_summary(aes(group = pid), fun='mean', color = 'black', alpha = .25) +
stat_summary(aes(group = pid), fun='mean', geom = 'line', color = 'black', alpha = .25) +
stat_summary(data = subset(procdat, condition == 'forget'), fun.data='mean_cl_normal', geom='errorbar', width = .1, size = 1, position = position_nudge(x = -.1)) +
stat_summary(data = subset(procdat, condition == 'forget'), fun='mean', geom='point', size = 4, position = position_nudge(x = -.1)) +
stat_summary(data = subset(procdat, condition == 'recall'), fun.data='mean_cl_normal', geom='errorbar', width = .1, size = 1, position = position_nudge(x = .1)) +
stat_summary(data = subset(procdat, condition == 'recall'), fun='mean', geom='point', size = 4, position = position_nudge(x = .1)) +
facet_wrap(group~type) +
scale_color_manual(values = c('red','blue'), guide = FALSE) +
labs(y = 'HC-PMN FC (z)', x = '')
procdat$group = factor(prodcat$group, levels = c('young','old'))
procdat$type = factor(prodcat$type, levels = c('onset','offset'))
ggplot(procdat, aes(x = condition, y = fz, color = pid)) +
theme_bw() +
geom_quasirandom() +
facet_wrap(group~type)
ggplot(procdat, aes(x = condition, y = fz, color = condition)) +
theme_bw() +
stat_summary(aes(group = pid), fun='mean', color = 'black', alpha = .25) +
stat_summary(aes(group = pid), fun='mean', geom = 'line', color = 'black', alpha = .25) +
stat_summary(data = subset(procdat, condition == 'forget'), fun.data='mean_cl_normal', geom='errorbar', width = .1, size = 1, position = position_nudge(x = -.1)) +
stat_summary(data = subset(procdat, condition == 'forget'), fun='mean', geom='point', size = 4, position = position_nudge(x = -.1)) +
stat_summary(data = subset(procdat, condition == 'recall'), fun.data='mean_cl_normal', geom='errorbar', width = .1, size = 1, position = position_nudge(x = .1)) +
stat_summary(data = subset(procdat, condition == 'recall'), fun='mean', geom='point', size = 4, position = position_nudge(x = .1)) +
facet_wrap(group~type) +
scale_color_manual(values = c('red','blue'), guide = 'none') +
labs(y = 'HC-PMN FC (z)', x = '')
procdat$group = factor(procdat$group, levels = c('young','old'))
procdat$type = factor(procdat$type, levels = c('onset','offset'))
ggplot(procdat, aes(x = condition, y = fz, color = pid)) +
theme_bw() +
geom_quasirandom() +
facet_wrap(group~type)
ggplot(procdat, aes(x = condition, y = fz, color = condition)) +
theme_bw() +
stat_summary(aes(group = pid), fun='mean', color = 'black', alpha = .25) +
stat_summary(aes(group = pid), fun='mean', geom = 'line', color = 'black', alpha = .25) +
stat_summary(data = subset(procdat, condition == 'forget'), fun.data='mean_cl_normal', geom='errorbar', width = .1, size = 1, position = position_nudge(x = -.1)) +
stat_summary(data = subset(procdat, condition == 'forget'), fun='mean', geom='point', size = 4, position = position_nudge(x = -.1)) +
stat_summary(data = subset(procdat, condition == 'recall'), fun.data='mean_cl_normal', geom='errorbar', width = .1, size = 1, position = position_nudge(x = .1)) +
stat_summary(data = subset(procdat, condition == 'recall'), fun='mean', geom='point', size = 4, position = position_nudge(x = .1)) +
facet_wrap(group~type) +
scale_color_manual(values = c('red','blue'), guide = 'none') +
labs(y = 'HC-PMN FC (z)', x = '')
getwd()
ggplot(procdat, aes(x = condition, y = fz, color = condition)) +
theme_bw() +
stat_summary(aes(group = pid), fun='mean', color = 'black', alpha = .25) +
stat_summary(aes(group = pid), fun='mean', geom = 'line', color = 'black', alpha = .25) +
stat_summary(data = subset(procdat, condition == 'forget'), fun.data='mean_cl_normal', geom='errorbar', width = .1, size = 1, position = position_nudge(x = -.1)) +
stat_summary(data = subset(procdat, condition == 'forget'), fun='mean', geom='point', size = 4, position = position_nudge(x = -.1)) +
stat_summary(data = subset(procdat, condition == 'recall'), fun.data='mean_cl_normal', geom='errorbar', width = .1, size = 1, position = position_nudge(x = .1)) +
stat_summary(data = subset(procdat, condition == 'recall'), fun='mean', geom='point', size = 4, position = position_nudge(x = .1)) +
facet_wrap(group~type) +
scale_color_manual(values = c('red','blue'), guide = 'none') +
labs(y = 'HC-mPFC FC (z)', x = '')
ggsave('hc-mpfc.png', width = 8, height = 6)
summary(alldat)
summary(alldat$ev)
head(alldat$ev)
write.csv(alldat$ev, file = demoEvents.tsv, sep = '/t')
write.table(alldat$ev, file = 'demoEvents.tsv', sep = '/t', row.names = FALSE)
?write.table
write.table(alldat$ev, file = 'inst/extdata/demoEvents.tsv', sep = '\t', row.names = FALSE, quote = FALSE)
head(alldat$tc)
write.table(alldat$tc, file = 'inst/extdata/demoTimecourses.tsv', sep = '\t', row.names = FALSE, quote = FALSE)
alldat$tc$value[1:10]
round(alldat$tc$value[1:10],2)
round(alldat$tc$value[1:10],3)
alldat$tc$value = round(alldat$tc$value,3)
write.table(alldat$tc, file = 'inst/extdata/demoTimecourses.tsv', sep = '\t', row.names = FALSE, quote = FALSE)
is.na(alldat$ev)
dim(alldat$ev)
is.data.frame(alldat$ev)
!is.data.frame(alldat$ev)
!is.data.frame(NA)
!is.data.frame('eau')
'a.tsv'
a <- 'a.tsv'
a <- 'a.oaeu.tsv'
strsplit(a,'[.]')
strsplit(a,'.')
strsplit(a,'[.]')
strsplit(a,'[.]')[[1]]
spl <- strsplit(a,'[.]')[[1]]
spl[length(spl)]
tolower('Abc')
extension
?warning
delim
?read.delim
a <- file.path('path','to','data','aeu.csv')
strsplit(a,'[.]')[[1]]
